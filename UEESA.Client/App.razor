<CascadingAuthenticationState>
    <div id="router">
        <div id="webpage">
            <Router AppAssembly="@typeof(App).Assembly">
                <Found Context="routeData">
                    <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                        <NotAuthorized>
                            @if (!context.User.Identity.IsAuthenticated)
                            {
                                <RedirectToLogin />
                            }
                            else
                            {
                                <p>You are not authorized to access this resource.</p>
                            }
                        </NotAuthorized>
                    </AuthorizeRouteView>
                </Found>
                <NotFound>
                    <LayoutView Layout="@typeof(MainLayout)">
                        <h4 id="page-load-error">Uh oh! There seems to be an error loading this page!</h4>
                    </LayoutView>
                </NotFound>
            </Router>
        </div>
        <SettingsPanel />
        <div id="sidebar-bordered-lines">
            <div id="sidebar-left-near"></div>
            <div id="sidebar-left-far"></div>
            <div id="sidebar-right-near"></div>
            <div id="sidebar-right-far"></div>
	    </div>
        <HeadlinesTicker />
        <EconomeTicker />
        <SidebarLeftSide />
        <SidebarRightSide />
        <MainNavigationBar />
    </div>
</CascadingAuthenticationState>

@inject NavigationManager NavigationManager

@inject InitializationState InitializationState
@inject UIState.PageState PageState
@inject ClientState ClientState
@inject ServerState ServerState
@inject LocalStorageState LocalStorageState
@inject WebSocketManagerMiddleware WebSocketMiddleware

@inject JSInterface Javascript
@inject JSInterface.Utilities Utilities
@inject JSInterface.Runtime Runtime
@inject JSInterface.Cache Cache
@inject JSInterface.LocalData LocalData
@inject JSInterface.AnimationManager AnimationManager

@code {

    protected override async Task OnInitializedAsync()
    {
        PageState.PageContexts = new()
        {
            new PageContext
            {
                FormalPageName = "Home",
                InformalPageName = "",
                AllowsNavBarTickers = true,
                PageBackgroundFileName = null
            },
            new PageContext
            {
                FormalPageName = "Blog",
                InformalPageName = "blog",
                AllowsNavBarTickers = true,
                PageBackgroundFileName = "blog.avif"
            },
            new PageContext
            {
                FormalPageName = "Changelog",
                InformalPageName = "changelog",
                AllowsNavBarTickers = true,
                PageBackgroundFileName = null
            },
            new PageContext
            {
                FormalPageName = "Star Gazer",
                InformalPageName = "stargazer",
                AllowsNavBarTickers = false,
                PageBackgroundFileName = null
            },
            new PageContext
            {
                FormalPageName = "Load Out",
                InformalPageName = "loadout",
                AllowsNavBarTickers = false,
                PageBackgroundFileName = "loadupout.avif"
            },
            new PageContext
            {
                FormalPageName = "Fleeter",
                InformalPageName = "fleeter",
                AllowsNavBarTickers = false,
                PageBackgroundFileName = "fleeter.avif"
            },
            new PageContext
            {
                FormalPageName = "Roadmap",
                InformalPageName = "roadmap",
                AllowsNavBarTickers = false,
                PageBackgroundFileName = "roadmap.avif"
            },
            new PageContext
            {
                FormalPageName = "Econome",
                InformalPageName = "econome",
                AllowsNavBarTickers = true,
                PageBackgroundFileName = "econome.avif"
            },
            new PageContext
            {
                FormalPageName = "Xenoguist",
                InformalPageName = "xenoguist",
                AllowsNavBarTickers = true,
                PageBackgroundFileName = "xenoguist.avif"
            }
        };
        if (NavigationManager.Uri == NavigationManager.BaseUri) PageState.CurrentPageContext = PageState.PageContexts.First(x => x.InformalPageName.IsEmpty());
        else PageState.CurrentPageContext = PageState.PageContexts.First(x => x.InformalPageName == NavigationManager.Uri.Substring(NavigationManager.Uri.LastIndexOf('/') + 1));
        await InitializationState.Init();
        await base.OnInitializedAsync();
    }
}