<CascadingAuthenticationState>
    <div id="router">
        <div id="webpage">
            <Router AppAssembly="@typeof(App).Assembly" AdditionalAssemblies="new[] { typeof(BlankLayout).Assembly }">
                <Found Context="routeData">
                    <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                        <NotAuthorized>
                            @if (!context.User.Identity.IsAuthenticated)
                            {
                                <RedirectToLogin />
                            }
                            else
                            {
                                <p>You are not authorized to access this resource.</p>
                            }
                        </NotAuthorized>
                    </AuthorizeRouteView>
                </Found>
                <NotFound>
                    <LayoutView Layout="@typeof(BlankLayout)">
                        <h4 id="page-load-error">Uh oh! There seems to be an error loading this page!</h4>
                    </LayoutView>
                </NotFound>
            </Router>
        </div>
        <ControlPanel/>
    </div>
</CascadingAuthenticationState>

@inject NavigationManager NavigationManager

@inject InitializationState InitializationState
@inject UIState.PageState PageState

@inject IJSRuntime JSRuntime

@code {

    protected override async Task OnInitializedAsync()
    {
        Uri navURI = new(NavigationManager.Uri);
        PageState.PageContexts = new()
        {
            new PageContext
            {
                FormalPageName = "Home",
                InformalPageName = string.Empty,
                PageBackgroundFileName = "home.webm",
                IsHidden = false,
                ShowControlpanel = true
            },
            new PageContext
            {
                FormalPageName = "Blog",
                InformalPageName = "blog",
                PageBackgroundFileName = "blog.webm",
                IsHidden = false,
                ShowControlpanel = true
            },
            new PageContext
            {
                FormalPageName = "Changelog",
                InformalPageName = "changelog",
                PageBackgroundFileName = "changelog.webm",
                IsHidden = false,
                ShowControlpanel = true
            },
            new PageContext
            {
                FormalPageName = "Roadmap",
                InformalPageName = "roadmap",
                PageBackgroundFileName = "roadmap.webm",
                IsHidden = false,
                ShowControlpanel = true
            },
            new PageContext
            {
                FormalPageName = "Load Out",
                InformalPageName = "loadout",
                PageBackgroundFileName = "loadout.webm",
                IsHidden = false,
                ShowControlpanel = true
            },
            new PageContext
            {
                FormalPageName = "Fleeter",
                InformalPageName = "fleeter",
                PageBackgroundFileName = "fleeter.webm",
                IsHidden = false,
                ShowControlpanel = true
            },
            new PageContext
            {
                FormalPageName = "Econome",
                InformalPageName = "econome",
                PageBackgroundFileName = "econome.webm",
                IsHidden = false,
                ShowControlpanel = true
            },

            // Admin
            new PageContext
            {
                FormalPageName = string.Empty,
                InformalPageName = "admin",
                PageBackgroundFileName = "home.webm",
                IsHidden = true,
                ShowControlpanel = true
            },

            // Debug
            new PageContext
            {
                FormalPageName = string.Empty,
                InformalPageName = "debug/ctp",
                PageBackgroundFileName = string.Empty,
                IsHidden = true,
                ShowControlpanel = false
            }
        };
        try
        {
            if (NavigationManager.Uri == NavigationManager.BaseUri || !PageState.PageContexts.Any(o => o.InformalPageName == navURI.AbsolutePath[1..])) PageState.CurrentPageContext = PageState.PageContexts.First(x => x.InformalPageName.IsEmpty());
            else
            {
                PageContext newConext = PageState.PageContexts.First(x => x.InformalPageName == navURI.AbsolutePath[1..]);
                if (!PageState.IsPageTransitioning && !PageState.CurrentPageContext.Equals(newConext)) PageState.CurrentPageContext = newConext;
            }
        }
        catch { NavigationManager.NavigateTo(string.Empty); }
        await InitializationState.Init(JSRuntime);
        await base.OnInitializedAsync();
    }
}