<a class="@(PageState.CurrentPageContext.InformalPageName == href[1..] ? "active" : string.Empty)" draggable="false" @onclick="SetPageContext">@ChildContent</a>

@inject UIState.PageState PageState
@inject NavigationManager NavigationManager
@inject JSInterface.AnimationManager AnimationManager 

@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string href { get; set; }

    protected override async Task OnInitializedAsync()
    {
        PageState.OnPagePreTransition += StateHasChanged;
        await base.OnInitializedAsync();
    }

    private void SetPageContext()
    {
        PageContext newConext = PageState.PageContexts.First(x => x.InformalPageName == href[1..]);
        if (!PageState.IsPageTransitioning && !PageState.CurrentPageContext.Equals(newConext)) PageState.CurrentPageContext = newConext;
    }
}
